[{"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\index.js":"1","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\App.js":"2","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Transport\\Transport.jsx":"3","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Instrument\\Instrument.jsx":"4","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Row\\Row.jsx":"5","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Row\\Beat.jsx":"6","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentSelect.jsx":"7","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\functions\\instrument.js":"8","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\functions\\music.js":"9","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\inst-options.js":"10","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\DrumKit\\DrumKit.jsx":"11","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentItem\\InstrumentItem.jsx":"12","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\DrumKitItem\\DrumKitItem.jsx":"13"},{"size":199,"mtime":1611207934252,"results":"14","hashOfConfig":"15"},{"size":190,"mtime":1611207934245,"results":"16","hashOfConfig":"15"},{"size":5124,"mtime":1611546276083,"results":"17","hashOfConfig":"15"},{"size":3185,"mtime":1611546276078,"results":"18","hashOfConfig":"15"},{"size":407,"mtime":1611186415097,"results":"19","hashOfConfig":"15"},{"size":654,"mtime":1611190436218,"results":"20","hashOfConfig":"15"},{"size":560,"mtime":1611546276080,"results":"21","hashOfConfig":"15"},{"size":241,"mtime":1611207934250,"results":"22","hashOfConfig":"15"},{"size":974,"mtime":1611546276084,"results":"23","hashOfConfig":"15"},{"size":1941,"mtime":1611546276085,"results":"24","hashOfConfig":"15"},{"size":2485,"mtime":1611546276075,"results":"25","hashOfConfig":"15"},{"size":2665,"mtime":1611546276079,"results":"26","hashOfConfig":"15"},{"size":679,"mtime":1611546276076,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"qk145p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\index.js",[],["62","63"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\App.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Transport\\Transport.jsx",["64","65"],"import React, { Component } from 'react'\nimport Instrument from '../Instrument/Instrument'\nimport InstrumentSelect from '../InstrumentSelect/InstrumentSelect'\nimport makeInstrumentLayers from '../../functions/instrument' \nimport * as Tone from 'tone'\nimport options from '../../inst-options.js'\nimport './Transport.scss'\nimport { Sampler } from 'tone'\nimport DrumKit from '../DrumKit/DrumKit'\n\n/* Analogous to the Rig class in index.js. */\nexport const GlobalStep = React.createContext()\n\nexport default class Trans extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            ready: false,\n            length: null,\n            bpm: 90,\n            step: -1,\n            instruments: [],         \n            instOptions: options.inst,\n            kitOptions: options.kit\n        }\n    }\n\n    start = (t,bpm) => {\n        Tone.Transport.bpm.value = bpm\n        const clear = Tone.Transport.scheduleRepeat(function(time){\n            t.incrementStep()\n            t.state.instruments.forEach(i => {\n                i.ref.current.go()\n            })\n            \n        }, \"8n\");\n        this.setState({\n            ...this.state,\n            bpm: bpm,\n            clear: clear\n        })\n        Tone.start()\n        Tone.Transport.start()\n    }\n\n    addInstrument = (inst) => {\n        const newInst = {\n            ref: React.createRef(),\n            layers: makeInstrumentLayers(inst.keys, this.state.length),\n            tone: inst.tone,\n            sounds: inst.sounds,\n            type: inst.type,\n            role: 'inst'\n        }\n\n        this.setState({\n            ...this.state,\n            instruments: [\n                ...this.state.instruments,\n                newInst\n            ]\n        })\n    }\n\n    addDrumKit(kit){\n        const newKit = {\n            ref: React.createRef(),\n            layers: makeInstrumentLayers(kit.keys, this.state.length),\n            sounds: kit.sounds,\n            role: 'kit'\n        }\n\n        this.setState({\n            ...this.state,\n            instruments: [\n                ...this.state.instruments,\n                newKit\n            ]\n        })\n    }\n\n    removeInstrument = (i) => {\n        const newInstArray = [...this.state.instruments]\n        newInstArray.splice(i,1)\n        this.setState({\n            ...this.state,\n            instruments: newInstArray\n        })\n    }\n\n    incrementStep = () => {\n        this.setState(\n            {\n                ...this.state,\n                step: this.state.step === this.state.length - 1 ? 0 : this.state.step + 1\n            })\n    }\n\n    changeValue = (e) => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n\n        if(e.target.name === 'bpm'){\n            this.stop()\n            this.start(this, e.target.value)\n        }\n    }\n\n    setLength = e => {\n        this.setState({\n            ...this.state,\n            ready: true,\n            length: e.target.value\n        })\n    }\n\n    stop = () => {\n        Tone.Transport.clear(this.state.clear).stop()\n    }\n\n    render() {\n        if(this.state.ready){\n            return (\n            <>\n                <button onClick = {() => this.start(this, this.state.bpm)}>\n                START\n                </button>\n\n                <button onClick = {() => this.addInstrument()}>\n                add \n                </button>\n                <button onClick={this.stop}>Stop</button>\n                <div className='transport'>\n                    <div className=\"menu\">\n                    <InstrumentSelect \n                        instruments = { this.state.instOptions } \n                        drumKits = {this.state.kitOptions}\n                        addInst = {(l)=>this.addInstrument(l)} \n                        addKit={(d)=>this.addDrumKit(d)}\n                    />\n                    BPM: {this.state.bpm}\n                    <input type=\"range\" name='bpm' min='60' max = '350' onChange={e=>this.changeValue(e)} value={this.state.bpm}/>\n                    </div>\n\n                    <GlobalStep.Provider value = {{step: this.state.step}}>\n                        {/* the instrument panel */}\n                        {this.state.instruments.map((i, j) => {\n                            if(i.role === 'inst') return <Instrument step={this.state.step} inst = {i} length ={this.state.length}  index = {j} layers = {i.layers} ref={i.ref} remove={this.removeInstrument}></Instrument>\n                            if(i.role === 'kit') return <DrumKit step={this.state.step} kit = {i.sounds} length ={this.state.length} index = {j} layers = {i.layers} ref={i.ref} remove={this.removeInstrument}></DrumKit>\n                        })}\n                    </GlobalStep.Provider>\n                </div>\n            </>\n        )} else return (\n            <select onChange = {(e) => this.setLength(e)} name=\"scale\" id=\"cars\">\n                <option value=\"4\">4</option>\n                <option value=\"8\">8</option>\n                <option value=\"16\">16</option>\n                <option value=\"32\">32</option>\n            </select>\n        )\n    }\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Instrument\\Instrument.jsx",["66","67"],"import React, { Component } from 'react'\nimport * as Tone from 'tone'\nimport Row from '../Row/Row'\nimport './Instrument.scss'\nimport { Time } from 'tone';\n\n/* \n\nanalagous to the Instrument class in index.js. \n\n*/\n\n\n\nexport default class Instrument extends Component {\n    constructor(props){\n        super(props)\n    \n        this.state ={\n            synth: new Tone.PolySynth(Tone.MonoSynth).toDestination(),\n            length: this.props.length,\n            layers : {}\n        }\n\n \n    }\n\n    /*\n        this method is called by the Transport component via a ref. It is\n        responsible for triggering the attack of the synth. It is called on\n        a schedule. \n    */\n\n\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            layers: this.props.layers\n        })\n    }\n\n    go(){\n        for(const layer in this.state.layers){\n            if(this.state.layers[layer][this.props.step]){\n                let time = Tone.now()\n                this.state.synth.triggerAttackRelease(layer, '8n.', time);\n            } \n        }\n\n        // this.state.step === this.state.length - 1 ? this.state.step = 0 : this.state.step ++\n    }\n\n    renderRows(){\n        // pushing every array in this.layers into an array \n        let layers = []\n        for (const key in this.state.layers){  \n            layers.push([key, ...this.state.layers[key]])\n        }\n        // returning the array\n        return layers\n    }\n\n    placeBeat = (key, index) => {\n        let newLayer = [...this.state.layers[key]]\n        newLayer[index] === 0 ? newLayer[index] = 1 : newLayer[index] = 0\n        this.setState({\n            layers: {\n                ...this.state.layers,\n                [key]: newLayer\n            }\n        })\n    } \n\n    render() {\n        this.renderRows()\n        return (  \n            <div className = 'instrument'>              \n                {\n                    // creating a Row component for each member of the array and passing it a layer\n                    this.renderRows()\n                    .reverse()\n                    .map(l => <Row placeBeat = {this.placeBeat} tone = {l[0]} layer = {l.filter(i => typeof i !== 'string')} />)\n                }     \n            </div>\n        )\n    }\n}","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Row\\Row.jsx",["68"],"import React, { Component } from 'react'\nimport Beat from './Beat'\nimport './Row.scss'\n\n\n// takes an array as props, maps over it to render beats\n\nexport default function Row(props) {\n\n\n\n    return (\n        <div className='row'>\n            {props.tone}{props.layer.map((l, i) => <Beat flip={props.placeBeat} layerKey={props.tone} index = {i} />)}\n        </div>\n    )\n}\n\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\Row\\Beat.jsx",["69","70"],"import React, { useState, useContext } from 'react'\nimport { GlobalStep } from '../Transport/Transport'\n\n// import cons[state, setstate] = useState(initialState)\n\nexport default function Beat (props) {\n    const [active, setActive] = useState()\n    const step = useContext(GlobalStep)\n\n    console.log(props.index, step);\n\n    const toggle = ()=> {\n        active = !active\n        console.log(active);\n    }\n\n    return (\n        <div onClick = {() => {\n            setActive(!active)\n            props.flip(props.layerKey, props.index)\n        }} \n            className = {`beat ${active ? 'beat--active' : ''}${step.step === props.index  ? 'beat--playing' : ''}`}>\n        </div>\n    )\n}\n",["71","72"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentSelect.jsx",["73","74"],"import React from 'react'\nimport makeInstrumentLayers from '../../functions/instrument'\nimport InstrumentItem from './InstrumentItem/InstrumentItem'\nimport './InstrumentSelect.scss'\nimport notes from '../../functions/music'\nimport DrumKitItem from '../DrumKitItem/DrumKitItem'\n\nexport default function InstrumentSelect(props) {\n    return (\n        <div>\n            {props.instruments.map(i => <InstrumentItem inst={i} addInst = {props.addInst}/>)}\n            {props.drumKits.map(k => <DrumKitItem kit={k} addKit = {props.addKit} />)}\n        </div>\n    )\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\functions\\instrument.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\functions\\music.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\inst-options.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\DrumKit\\DrumKit.jsx",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentItem\\InstrumentItem.jsx",["75"],"import React, { Component } from 'react'\r\nimport { Player } from 'tone'\r\nimport notes from '../../../functions/music'\r\n\r\nexport default class InstrumentItem extends Component {\r\n    state = {\r\n        key: 'C',\r\n        scale: 'major',\r\n        octave: '2',\r\n        range: 1,\r\n        expanded: false\r\n    }\r\n\r\n\r\n\r\n    expand = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            expanded: !this.state.expanded\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n        console.log(this.state[e.target.name]);\r\n    }\r\n\r\n    makeInst = (key, scale, octave, range, tone, type) => {\r\n        let _notes = []\r\n\r\n        for(let i = 0; i < range; i++){\r\n            _notes = [..._notes, ...notes.getScale(key, scale, Number(octave) + i)]\r\n            console.log(_notes);\r\n        }\r\n\r\n        this.props.addInst({keys:_notes, tone:tone, type})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.expanded){\r\n        return (\r\n            <>\r\n            <h3 className=\"inst__name\" onClick={this.expand}>{this.props.inst.name}</h3>\r\n            <div className='inst'>\r\n                \r\n\r\n                <label htmlFor=\"key\">Key:</label>\r\n                <input name='key' onChange = {(e) => this.handleChange(e)} type=\"text\" value={this.state.key}/>\r\n\r\n                <label htmlFor=\"scale\">Scale:</label>\r\n                <select onChange = {(e) => this.handleChange(e)} value={this.state.scale} name=\"scale\" id=\"cars\">\r\n                    <option value=\"chromatic\">chromatic</option>\r\n                    <option value=\"major\">major</option>\r\n                    <option value=\"minor\">minor</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"key\">octave</label>\r\n                <input name='octave' onChange = {(e) => this.handleChange(e)} value={this.state.octave} type=\"number\"/>\r\n                <label htmlFor=\"range\">range</label>\r\n                <input name='range' onChange = {(e) => this.handleChange(e)} value={this.state.range} type=\"number\"/>\r\n\r\n                <button onClick={\r\n                ()=>this.makeInst(this.state.key, \r\n                    this.state.scale, this.state.octave, \r\n                    this.state.range, \r\n                    {\r\n                        urls: this.props.inst.urls,\r\n                        baseUrl: this.props.inst.baseUrl,\r\n                    },\r\n                    this.props.inst.type\r\n                )}>ADD</button>\r\n            </div>\r\n            </>\r\n        )\r\n        } else {\r\n            return (\r\n                <h3 className=\"inst__name\" onClick={this.expand}>{this.props.inst.name}</h3>\r\n            )\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\Capstone\\bitbeat\\bitbeat\\src\\components\\DrumKitItem\\DrumKitItem.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":149,"column":60,"nodeType":"86","messageId":"87","endLine":149,"endColumn":62},{"ruleId":"80","severity":1,"message":"88","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":10},{"ruleId":"80","severity":1,"message":"89","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":14},{"ruleId":"80","severity":1,"message":"90","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"91","line":10,"column":11,"nodeType":"82","messageId":"83","endLine":10,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":11,"column":9,"nodeType":"82","messageId":"94","endLine":11,"endColumn":15},{"ruleId":"76","replacedBy":"95"},{"ruleId":"78","replacedBy":"96"},{"ruleId":"80","severity":1,"message":"97","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":28},{"ruleId":"80","severity":1,"message":"98","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"80","severity":1,"message":"99","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Sampler' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'C1' is defined but never used.","'Time' is defined but never used.","'Component' is defined but never used.","'toggle' is assigned a value but never used.","no-const-assign","'active' is constant.","const",["100"],["101"],"'makeInstrumentLayers' is defined but never used.","'notes' is defined but never used.","'Player' is defined but never used.","no-global-assign","no-unsafe-negation"]