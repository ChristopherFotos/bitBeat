[{"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\index.js":"1","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\App.js":"2","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Transport\\Transport.jsx":"3","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\inst-options.js":"4","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\instrument.js":"5","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Instrument\\Instrument.jsx":"6","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentSelect.jsx":"7","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKit\\DrumKit.jsx":"8","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\music.js":"9","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKitItem\\DrumKitItem.jsx":"10","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Row.jsx":"11","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentItem\\InstrumentItem.jsx":"12","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Beat.jsx":"13","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\firebase.js":"14","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentPanel\\InstrumentPanel.jsx":"15","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\Pedal.jsx":"16","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\settings.js":"17","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\mouse.js":"18"},{"size":199,"mtime":1611207934252,"results":"19","hashOfConfig":"20"},{"size":220,"mtime":1611970606843,"results":"21","hashOfConfig":"20"},{"size":10383,"mtime":1612145743246,"results":"22","hashOfConfig":"20"},{"size":6737,"mtime":1612158241865,"results":"23","hashOfConfig":"20"},{"size":241,"mtime":1611207934250,"results":"24","hashOfConfig":"20"},{"size":7057,"mtime":1612127550556,"results":"25","hashOfConfig":"20"},{"size":754,"mtime":1612073358877,"results":"26","hashOfConfig":"20"},{"size":2602,"mtime":1611799162885,"results":"27","hashOfConfig":"20"},{"size":929,"mtime":1611888288014,"results":"28","hashOfConfig":"20"},{"size":753,"mtime":1612063105979,"results":"29","hashOfConfig":"20"},{"size":543,"mtime":1612120093234,"results":"30","hashOfConfig":"20"},{"size":3893,"mtime":1612159090020,"results":"31","hashOfConfig":"20"},{"size":725,"mtime":1612120037332,"results":"32","hashOfConfig":"20"},{"size":469,"mtime":1611799162899,"results":"33","hashOfConfig":"20"},{"size":1280,"mtime":1611799162890,"results":"34","hashOfConfig":"20"},{"size":2250,"mtime":1612127497226,"results":"35","hashOfConfig":"20"},{"size":2599,"mtime":1612127422429,"results":"36","hashOfConfig":"20"},{"size":347,"mtime":1611974781558,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1hhxasi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\index.js",[],["84","85"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\App.js",["86"],"\nimport Trans from './components/Transport/Transport'\nimport mouse from './mouse'\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Trans></Trans>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Transport\\Transport.jsx",["87","88","89","90","91","92"],"import React, { Component } from 'react'\nimport Instrument from '../Instrument/Instrument'\nimport InstrumentSelect from '../InstrumentSelect/InstrumentSelect'\nimport makeInstrumentLayers from '../../functions/instrument' \nimport play from '../../assets/icons/play-btn.svg'\nimport down from '../../assets/icons/down-arrow-light.svg'\nimport up from '../../assets/icons/up-arrow-light.svg'\nimport pause from '../../assets/icons/pause-btn.svg'\nimport * as Tone from 'tone'\nimport logo from '../../assets/logo-bold.png'\nimport Collapsible from 'react-collapsible'\nimport options from '../../inst-options.js'\nimport Draggable from 'react-draggable';\nimport InstrumentPanel from '../InstrumentPanel/InstrumentPanel'\nimport './Transport.scss'\nimport save from '../../assets/icons/floppy-disk.svg'\nimport { Sampler } from 'tone'\nimport firebase from '../../firebase'\nimport {v4 as uuid} from 'uuid'\nimport DrumKit from '../DrumKit/DrumKit'\nimport { writable } from 'tone/build/esm/core/util/Interface'\nconst db = firebase.firestore()\n\n/* Analogous to the Rig class in index.js. */\nexport const GlobalStep = React.createContext()\n\nexport default class Trans extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            ready: false,\n            lengthMenuExpand: false,\n            playing: false,\n            length: 16,\n            bpm: 90,\n            step: -1,\n            instruments: [],         \n            instOptions: options.inst,\n            kitOptions: options.kit,\n            \n        }\n    }\n\n    start = (t,bpm) => {\n        Tone.Transport.bpm.value = bpm\n        Tone.Transport.swing = 1\n        const clear = Tone.Transport.scheduleRepeat(function(time){\n            t.incrementStep()\n            t.state.instruments.forEach(i => {\n                i.ref.current.go()\n            })\n            \n        }, \"8n\");\n        this.setState({\n            ...this.state,\n            playing: true,\n            bpm: bpm,\n            clear: clear\n        })\n        Tone.start()\n        Tone.Transport.start()\n    }\n\n    stop = () => {\n        Tone.Transport.clear(this.state.clear).stop()\n        this.setState({\n            ...this.state,\n            playing: false\n        })\n    }\n\n    addInstrument = (inst) => {\n        const newInst = {\n            ref: React.createRef(),\n            layers: makeInstrumentLayers(inst.keys, this.state.length),\n            tone: inst.tone,\n            sounds: inst.sounds,\n            type: inst.type,\n            name: inst.tone.name,\n            role: 'inst',\n            id: uuid(),\n        }\n\n        this.setState({\n            ...this.state,\n            instruments: [\n                ...this.state.instruments,\n                newInst\n            ]\n        })\n    }\n\n    addDrumKit(kit){\n        const newKit = {\n            ref: React.createRef(),\n            layers: makeInstrumentLayers(kit.keys, this.state.length),\n            sounds: kit.sounds,\n            role: 'kit',\n            id: uuid()\n        }\n\n        this.setState({\n            ...this.state,\n            instruments: [\n                ...this.state.instruments,\n                newKit\n            ]\n        })\n    }\n\n    removeInstrument = (i) => {\n        console.log('i: ', i);\n        const newInstArray = [...this.state.instruments]\n        console.log('new inst arry ', [...newInstArray]);\n\n        newInstArray.splice(i,1)\n\n        this.setState({\n            ...this.state,\n            instruments: this.state.instruments.filter((inst,j)=>j !== i)\n        })\n    }\n\n    incrementStep = () => {\n        this.setState(\n            {\n                ...this.state,\n                step: this.state.step === this.state.length - 1 ? 0 : this.state.step + 1\n            })\n    }\n\n    changeValue = (e) => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n\n        if(e.target.name === 'bpm'){\n            this.stop()\n            this.start(this, e.target.value)\n        }\n    }\n\n    setLength = n => {\n\n        console.log('running length');\n        this.setState({\n            ...this.state,\n            length: n\n        })\n    }\n\n    setExpanded(){\n        this.setState({\n            ...this.state,\n            lengthMenuExpanded: !this.state.lengthMenuExpand\n        })\n    }\n\n    setReady(){\n        this.setState({\n            ...this.state,\n            ready: true\n        })\n    }\n\n    saveBeat = () => {\n        \n        const instruments = this.state.instruments\n            .map(i => {\n                return ({\n                layers: i.ref.current.getLayers(),\n                tone: i.tone,\n                role: i.role,\n                sounds: i.sounds || 0,\n                type: i.type,\n            }\n          )\n        })\n\n        console.log(instruments);\n        \n        db.collection('beats').doc('LASTBEAT').set({           \n            bpm: this.state.bpm,\n            length: this.state.length,\n            instruments: instruments\n        })\n        .then(()=>console.log('doc written ok'))\n    }\n\n    getBeats = (t) => {\n        let beats = [];\n\n\n        db.collection(\"beats\")\n        .get()\n        .then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                let beat = doc.data()\n                \n                if(beat.instruments){\n                    beat.instruments.forEach(i => {\n                        i.ref = React.createRef()\n                        i.id = uuid()\n                    })\n                    beats.push(beat)\n                }\n            });\n\n            console.log(t);\n            t.setState({\n                ...t.state,\n                bpm: beats[1].bpm,\n                length: beats[1].length,\n                instruments: beats[1].instruments,\n            })\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n        \n    }\n\n    render() {\n        if(this.state.ready){\n            return (\n                // left panel\n                <div className=\"container\">\n                \n                \n                        <InstrumentSelect \n                            instruments = { this.state.instOptions } \n                            drumKits = {this.state.kitOptions}\n                            addInst = {(l)=>this.addInstrument(l)} \n                            addKit={(d)=>this.addDrumKit(d)}\n                        />\n\n                   \n\n                {/* Main panel */}\n                <div className='main'>\n                <img src={logo} className='logo' alt=\"\"/>\n                    <GlobalStep.Provider value = {{step: this.state.step}}>\n                     <div className=\"instruments\">\n                     \n                         {this.state.instruments.length < 1 && <h1 className='instruments__heading'>Add an instrument to get started</h1>}\n                         {[...this.state.instruments].map((i, j) => {\n                             if(i.role === 'inst') return <Instrument key={i.id} step={this.state.step} inst = {i} length ={this.state.length}  index = {j} layers = {i.layers} ref={i.ref} remove={this.removeInstrument}></Instrument>\n                             if(i.role === 'kit' ) return <DrumKit key={i.id} step={this.state.step} kit = {i.sounds} length ={this.state.length} index = {j} layers = {i.layers} ref={i.ref} remove={this.removeInstrument}></DrumKit>\n                         })}\n                     </div>\n                     </GlobalStep.Provider>                  \n                </div>\n\n                        <div className=\"controls__wrap\">\n                        <button className = 'setup__play-button' onClick = {() => {\n                        if(!this.state.playing) this.start(this, this.state.bpm)\n                        if(this.state.playing) this.stop()\n                        }} >\n                        <img src={this.state.playing ? pause : play} alt=\"\" className=\"setup__play-icon\"/>\n                        </button>\n                        <div className=\"controls__bpm-wrap\">\n                            BPM: {this.state.bpm}\n                            <input  \n                                className = 'transport__bpm'\n                                type=\"range\" \n                                name='bpm' min='60' \n                                max = '250'     \n                                onChange={e=>this.changeValue(e)} \n                                value={this.state.bpm}\n                            /> \n                        </div> \n                        </div>\n\n                </div>\n\n                \n\n        )} else return (\n            <div className=\"main\">\n                <img src={logo} className='logo' alt=\"\"/>\n                <div className=\"length-select\">\n                Select a length to start a beat\n                <Collapsible \n                    className = 'length-select__list' \n                    trigger={\n                        <div className='length-select__btn-wrap'>\n                        <div className='length-select__btn' onClick={() => this.setExpanded()}>\n                            Select a length\n                            <img className='length-select__arrow' src={this.state.lengthMenuExpand ? up : down} alt=\"\"/>\n                        </div>\n                        <span className='length-select__current'> {this.state.length} beats</span>\n                        </div>\n                    } \n                    easing='ease-in-out'\n                >\n                    \n                    <div onClick={()=>this.setLength(4)} className='length-select__option'  value=\"4\">4 beats</div>\n                    <div onClick={()=>this.setLength(8)} className='length-select__option'  value=\"8\">8 beats</div>\n                    <div onClick={()=>this.setLength(16)} className='length-select__option' value=\"16\">16 beats</div>\n                    <div onClick={()=>this.setLength(32)} className='length-select__option' value=\"32\">32 beats</div>\n                </Collapsible>\n                <button className='length-select__start' onClick={()=>this.setReady()}>+ start new beat</button>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\n\n\n\n// db.collection(\"times\").get().then((querySnapshot) => {\n//     querySnapshot.forEach((doc) => {\n//         console.log(`${doc.id} => ${doc.data()}`);\n// });\n// });","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\inst-options.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\instrument.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Instrument\\Instrument.jsx",["93","94","95","96"],"import React, { Component } from 'react'\nimport * as Tone from 'tone'\nimport Row from '../Row/Row'\nimport './Instrument.scss'\nimport Pedal from '../Pedal/Pedal'\nimport {v4 as uuid} from 'uuid'\nimport remove from '../../assets/icons/x.svg'\nimport Collapsable from 'react-collapsible'\nimport makeInstrumentLayers from '../../functions/instrument'\nimport { Time } from 'tone';\n\nexport default class Instrument extends Component {\n    constructor(props){\n        super(props) \n        this.state ={\n            length: this.props.length,\n            layers : {},\n            volume: -12,\n            volumeNode: new Tone.Volume, \n            effectsObjects: [],\n            effectsChain: []\n        }\n    }\n\n    getLayers = () => this.state.layers\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            layers: this.props.layers,\n            sound: this.makeTone(this.props.inst.tone)\n        })   \n\n        this.state.volumeNode.set({volume:this.state.volume}).toDestination()\n    }\n\n    addEffect(effect, val) {\n        // copy the array of effects objects\n        const newObjectArray = [...this.state.effectsObjects]\n        \n        // push a new effect object in there using the effect param, which is a string\n        newObjectArray.push({\n            node: new Tone[effect](...val),\n            type: effect,\n            id: uuid()\n        })\n\n        // replace the old effectsObjects array with the clone we just manipulated\n        this.setState({\n            ...this.state,\n            effectsObjects: newObjectArray,\n            effects: newObjectArray.map(o => o.node)\n        }, () => { this.state.sound.chain(...this.state.effects, this.state.volumeNode)})\n    }\n\n    updateEffect = (effectId, property, val) => {\n        // copy the current effectsObjects array\n        const newEffectsObjects = [...this.state.effectsObjects]\n\n        // get the effect object whos id mathces effectId\n        let effect = newEffectsObjects.find(obj => obj.id === effectId)\n\n        // set the property specified by the property param equal to the val param\n        effect.node.set({[property]: val})\n        console.log('NEW NODE VAL: ', effect.node.get(property));\n\n        // set state, replacing the old effects objects array with the one we just manipulated\n        this.setState({\n            ...this.state,\n            effectsObjects: newEffectsObjects, \n        }, () => { this.state.sound.chain(...this.state.effects, this.state.volumeNode)})\n        // we may have to call the chain method again here\n    }\n\n    setVolume = (e) => {\n        this.setState({\n            ...this.state,\n            volume: e.target.value\n        })\n\n        this.state.volumeNode.set({volume:e.target.value}) \n    }\n\n    go(){\n        for(const layer in this.state.layers){\n            if(this.state.layers[layer][this.props.step]){\n                let time = Tone.now()\n                this.state.sound.triggerAttackRelease([layer], '8n.', time) \n            } \n        }\n\n        \n    }\n\n    makeTone = (tone) => {\n        return new Tone.Sampler({\n        urls: tone.urls,\n        baseUrl: tone.baseUrl,\n        onload: () => {\n            console.log('LOADED');\n        }}).connect(this.state.volumeNode)    \n    }\n\n    renderRows(){\n        // pushing every array in this.layers into an array \n        let layers = []\n        for (const key in this.state.layers){  \n            layers.push([key, ...this.state.layers[key]])\n        }\n        // returning the array\n        return layers\n    }\n\n    placeBeat = (key, index) => {\n        let newLayer = [...this.state.layers[key]]\n        newLayer[index] === 0 ? newLayer[index] = 1 : newLayer[index] = 0\n        this.setState({\n            layers: {\n                ...this.state.layers,\n                [key]: newLayer\n            }\n        })\n    } \n\n    render() {\n        return (  \n                <div className = 'instrument'>\n                    <img src={remove} className= 'instrument__remove-btn' onClick={()=>this.props.remove(this.props.index)} /> \n                    <h3 className=\"instrument__name\">{this.props.inst.name}</h3>\n                    <div className=\"instrument__volume-wrap\">\n                        <label htmlFor=\"volume\"> volume </label>\n                        <input orient=\"vertical\" className='instrument__volume' name = 'volume' style={{width: '400px'}} type=\"range\" min='-55' max='20' onChange={e=>this.setVolume(e)} value={this.state.gain}/>\n                    </div>\n\n                    <div className=\"instrument__wrap\">\n                    \n                               \n                    {\n                        // creating a Row component for each member of the array and passing it a layer\n                        this.renderRows()\n                        .reverse()\n                        .map(l => <Row placeBeat = {this.placeBeat} tone = {l[0]} layer = {l.filter(i => typeof i !== 'string')} />)\n                    }     \n                    <div className=\"instrument__wrap\">\n                        <div className=\"instrument__effect-rack\">\n                         <Collapsable trigger='Effects:' easing = 'cubic-bezier(1, 2, 0.6, 0.7)' triggerStyle={{cursor: 'pointer'}}> \n                        <div className=\"instruments__button-wrap\">  \n\n                            <span className = 'instrument__effect-btn' onClick={() => this.addEffect('Reverb', [10])}>reverb</span> \n                            <span className = 'instrument__effect-btn' onClick={() => this.addEffect('Distortion',[0.5])}>distortion</span> \n                            <span className = 'instrument__effect-btn' onClick={() => this.addEffect('FeedbackDelay', ['16n', 0.5])}>feedback delay</span>\n                            <span className = 'instrument__effect-btn' onClick={() => this.addEffect('Vibrato', [1, 1])}>vibrato</span>\n                            <span className = 'instrument__effect-btn' onClick={() => this.addEffect('JCReverb', [0.5])}>room reverb</span>\n                            <span className = 'instrument__effect-btn' onClick={() => this.addEffect('EQ3', [3,3,3])}>EQ3</span>\n                        </div>\n                        </Collapsable>  \n                        <div className=\"instrument__pedals\">\n                        {\n                                this.state.effectsObjects.map(obj => {\n                                    return(\n                                    <Pedal change={(id,property,val)=>this.updateEffect(id,property,val)} \n                                    key={obj.id} \n                                    effect={obj}\n                                />)})\n                            }\n                        </div>\n                        </div> \n                        \n                    </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\n// const makeTone = (tone) => {\n\n//     return new Tone.Sampler({\n//     urls: tone.urls,\n//     baseUrl: tone.baseUrl,\n//     onload: () => {\n//         console.log('LOADED');\n//     }}).toDestination() \n\n// }","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentSelect.jsx",["97","98","99","100","101"],"import React from 'react'\nimport makeInstrumentLayers from '../../functions/instrument'\nimport InstrumentItem from './InstrumentItem/InstrumentItem'\nimport './InstrumentSelect.scss'\nimport {useState} from 'react'\nimport {useRef} from 'react'\nimport notes from '../../functions/music'\nimport DrumKitItem from '../DrumKitItem/DrumKitItem'\nimport mouse from '../../mouse'\n\n\nexport default function InstrumentSelect(props) {\n    \n\n    return (\n        <div className='instrument-select'>\n            <h1>Instruments:</h1>\n            {props.instruments.map(i => <InstrumentItem inst={i} addInst = {props.addInst}/>)}\n            <h1>Drumkits:</h1>\n            {props.drumKits.map(k => <DrumKitItem kit={k} addKit = {props.addKit} />)}\n        </div>\n    )\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKit\\DrumKit.jsx",["102"],"import React, { Component } from 'react'\nimport Row from '../../components/Row/Row'\nimport remove from '../../assets/icons/x.svg'\nimport './DrumKit.scss'\nimport * as Tone from 'tone'\n\nexport default class DrumKit extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            sounds:{},\n            layers: []\n        }\n    }\n\n    changeLength(l){\n        const prevLength = this.state.length\n\n        this.setState({\n                ...this.state,\n                length: l\n            })\n        \n        let newLayers = {}\n        \n        for(const key in this.state.layers){\n            newLayers[key] = this.state.layers[key]\n\n            for(let i = 0; i < l - prevLength; i++){\n                newLayers[key].push(0)\n            }\n        }    \n    \n        this.setState({\n            ...this.state,\n            layers: newLayers\n        })\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            layers: this.props.layers,\n            sounds: this.props.kit\n        })\n    }\n\n    go(){\n        for(const layer in this.state.layers){\n            if(this.state.layers[layer][this.props.step]){\n                const time = Tone.now()\n                console.log(this.state.sounds[layer]);\n                this.state.sounds[layer].start(time)\n            } \n        }\n    }\n\n    renderRows(){\n        // pushing every array in this.layers into an array \n        let layers = []\n        for (const key in this.state.layers){  \n            layers.push([key, ...this.state.layers[key]])\n        }\n        // returning the array\n        return layers\n    }\n\n    placeBeat = (key, index) => {\n        let newLayer = [...this.state.layers[key]]\n        newLayer[index] === 0 ? newLayer[index] = 1 : newLayer[index] = 0\n        this.setState({\n            layers: {\n                ...this.state.layers,\n                [key]: newLayer\n            }\n        })\n    } \n\n    render() {\n        this.renderRows()\n        return (  \n            <>\n            \n            <div className = 'instrument'>   \n            <img src={remove} className = 'instrument__remove-btn' onClick={()=>this.props.remove(this.props.index)} />           \n                {\n                    // creating a Row component for each member of the array and passing it a layer\n                    this.renderRows()\n                    .reverse()\n                    .map(l => <Row placeBeat = {this.placeBeat} tone = {l[0]} layer = {l.filter(i => typeof i !== 'string')} />)\n                }     \n            </div>\n            </>\n        )\n    }\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\music.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKitItem\\DrumKitItem.jsx",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Row.jsx",["103","104"],"import React, { Component } from 'react'\nimport Beat from './Beat'\nimport FadeIn from 'react-fade-in'\nimport './Row.scss'\n\n\n// takes an array as props, maps over it to render beats\n\nexport default function Row(props) {\n\n\n\n    return (\n        <div className='row'>\n            {/* <FadeIn className='row' style={{display: 'flex'}}> */}\n            <span className=\"row__key\">{props.tone}</span>{props.layer.map((l, i) => <Beat flip={props.placeBeat} layerKey={props.tone} index = {i} />)}\n            {/* </FadeIn> */}\n        </div>\n    )\n}\n\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentItem\\InstrumentItem.jsx",["105","106","107"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Beat.jsx",["108","109"],"import React, { useState, useContext } from 'react'\nimport { GlobalStep } from '../Transport/Transport'\nimport FadeIn from 'react-fade-in'\n\n\n// import cons[state, setstate] = useState(initialState)\n\nexport default function Beat (props) {\n    const [active, setActive] = useState()\n    const step = useContext(GlobalStep)\n\n    const toggle = ()=> {\n        active = !active\n        console.log(active);\n    }\n\n    return (\n        <FadeIn>\n        <div onClick = {() => {\n            setActive(!active)\n            props.flip(props.layerKey, props.index)\n        }} \n            className = {`beat ${active ? 'beat--active' : ''}${step.step === props.index  ? 'beat--playing' : ''}`}>\n        </div>\n        </FadeIn>\n    )\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\firebase.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentPanel\\InstrumentPanel.jsx",["110"],"import './InstrumentPanel.scss'\r\nimport React, { Component } from 'react'\r\nimport DrumKit from '../DrumKit/DrumKit'\r\nimport Instrument from '../Instrument/Instrument'\r\n\r\nexport default class InstrumentPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'instrument-panel'>\r\n                {this.props.instruments.map((i, j) => {\r\n                    if(i.role === 'inst') return (\r\n                        <Instrument \r\n                        step={this.props.step} \r\n                        inst = {i} \r\n                        length ={this.props.length}  \r\n                        index = {j} \r\n                        layers = {i.layers} \r\n                        ref={i.ref} \r\n                        remove={this.props.removeInstrument} />\r\n                    )\r\n                    if(i.role === 'kit') return (\r\n                        <DrumKit \r\n                        step={this.props.step} \r\n                        kit = {i.sounds} \r\n                        length = {this.props.length} \r\n                        index = {j} \r\n                        layers = {i.layers} \r\n                        ref={i.ref} \r\n                        remove={this.props.removeInstrument} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\Pedal.jsx",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\settings.js",["111","112","113"]," // used in Pedals.jsx for creating settings controls\r\n \r\n const settings = {\r\n    'Reverb': [\r\n        {\r\n            name: 'decay',\r\n            label: 'decay',\r\n            range: [0.001, 10],\r\n            normalize: 0,\r\n            default: 10\r\n        },\r\n\r\n        {\r\n            name: 'wet',\r\n            label: 'wet',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 1\r\n        }\r\n    ],\r\n\r\n    'FeedbackDelay': [\r\n        {\r\n            name: 'feedback',\r\n            label: 'feedback',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 0.1\r\n        },\r\n\r\n        {\r\n            name: 'delayTime',\r\n            label: 'delay time',\r\n            range: [1, 3],\r\n            normalize: 2,\r\n            default: 1\r\n        },\r\n    ],\r\n    \r\n    'Distortion': [\r\n        {\r\n            name: 'distortion',\r\n            label: 'distortion',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 1\r\n        },\r\n    ],\r\n\r\n    'JCReverb': [\r\n        {\r\n            name: 'roomSize',\r\n            label: 'room size',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 5\r\n        },\r\n\r\n        {\r\n            name: 'wet',\r\n            label: 'wet',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 5\r\n        },\r\n    ],\r\n\r\n    'Vibrato': [\r\n        {\r\n            name: 'depth',\r\n            label: 'depth',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 1\r\n        },\r\n\r\n        {\r\n            name: 'frequency',\r\n            label: 'frequency',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 1\r\n        },\r\n        {\r\n            name: 'wet',\r\n            label: 'wet',\r\n            range: [1, 10],\r\n            normalize: 1,\r\n            default: 5\r\n        },\r\n    ],\r\n    'EQ3': [\r\n        {\r\n            name: 'high',\r\n            label: 'high',\r\n            range: [1, 20],\r\n            normalize: 0,\r\n            default: 5\r\n        },\r\n\r\n        {\r\n            name: 'mid',\r\n            label: 'mid',\r\n            range: [1, 20],\r\n            normalize: 0,\r\n            default: 5\r\n        },\r\n        {\r\n            name: 'low',\r\n            label: 'low',\r\n            range: [1, 20],\r\n            normalize: 0,\r\n            default: 5\r\n        },\r\n    ],\r\n\r\n\r\n\r\n    normalizers: [\r\n        n => n,\r\n        n => n/10,\r\n        n => {\r\n            if(n == 1) return '16n'\r\n            if(n == 2) return '8n'\r\n            if(n == 3) return '4n'\r\n        }\r\n    ]\r\n}\r\n\r\nexport default settings","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\mouse.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":17},{"ruleId":"118","severity":1,"message":"123","line":14,"column":8,"nodeType":"120","messageId":"121","endLine":14,"endColumn":23},{"ruleId":"118","severity":1,"message":"124","line":16,"column":8,"nodeType":"120","messageId":"121","endLine":16,"endColumn":12},{"ruleId":"118","severity":1,"message":"125","line":17,"column":10,"nodeType":"120","messageId":"121","endLine":17,"endColumn":17},{"ruleId":"118","severity":1,"message":"126","line":21,"column":10,"nodeType":"120","messageId":"121","endLine":21,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":247,"column":66,"nodeType":"129","messageId":"130","endLine":247,"endColumn":68},{"ruleId":"118","severity":1,"message":"131","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":28},{"ruleId":"118","severity":1,"message":"132","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":19,"column":25,"nodeType":"135","messageId":"136","endLine":19,"endColumn":40,"fix":"137"},{"ruleId":"138","severity":1,"message":"139","line":128,"column":21,"nodeType":"140","endLine":128,"endColumn":127},{"ruleId":"118","severity":1,"message":"131","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":28},{"ruleId":"118","severity":1,"message":"141","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"118","severity":1,"message":"142","line":6,"column":9,"nodeType":"120","messageId":"121","endLine":6,"endColumn":15},{"ruleId":"118","severity":1,"message":"143","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":85,"column":13,"nodeType":"140","endLine":85,"endColumn":120},{"ruleId":"118","severity":1,"message":"144","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"145","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"146","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"147","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"148","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"149","line":12,"column":11,"nodeType":"120","messageId":"121","endLine":12,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":13,"column":9,"nodeType":"120","messageId":"152","endLine":13,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":10,"column":52,"nodeType":"129","messageId":"130","endLine":10,"endColumn":54},{"ruleId":"153","severity":1,"message":"154","line":123,"column":18,"nodeType":"155","messageId":"156","endLine":123,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":124,"column":18,"nodeType":"155","messageId":"156","endLine":124,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":125,"column":18,"nodeType":"155","messageId":"156","endLine":125,"endColumn":20},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'mouse' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'InstrumentPanel' is defined but never used.","'save' is defined but never used.","'Sampler' is defined but never used.","'writable' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'makeInstrumentLayers' is defined but never used.","'Time' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"159","text":"160"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useRef' is defined but never used.","'notes' is defined but never used.","'Component' is defined but never used.","'FadeIn' is defined but never used.","'Player' is defined but never used.","'expand' is defined but never used.","'collapse' is defined but never used.","'toggle' is assigned a value but never used.","no-const-assign","'active' is constant.","const","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[623,623],"()"]