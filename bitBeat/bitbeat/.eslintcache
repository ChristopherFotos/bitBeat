[{"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\index.js":"1","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\App.js":"2","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Transport\\Transport.jsx":"3","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\inst-options.js":"4","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\instrument.js":"5","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Instrument\\Instrument.jsx":"6","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentSelect.jsx":"7","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKit\\DrumKit.jsx":"8","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\music.js":"9","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKitItem\\DrumKitItem.jsx":"10","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Row.jsx":"11","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentItem\\InstrumentItem.jsx":"12","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Beat.jsx":"13","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\firebase.js":"14","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentPanel\\InstrumentPanel.jsx":"15","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\Pedal.jsx":"16","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\settings.js":"17","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\mouse.js":"18"},{"size":199,"mtime":1611207934252,"results":"19","hashOfConfig":"20"},{"size":220,"mtime":1611970606843,"results":"21","hashOfConfig":"20"},{"size":8634,"mtime":1612065394572,"results":"22","hashOfConfig":"20"},{"size":1907,"mtime":1611799162900,"results":"23","hashOfConfig":"20"},{"size":241,"mtime":1611207934250,"results":"24","hashOfConfig":"20"},{"size":7057,"mtime":1612127550556,"results":"25","hashOfConfig":"20"},{"size":754,"mtime":1612073358877,"results":"26","hashOfConfig":"20"},{"size":2602,"mtime":1611799162885,"results":"27","hashOfConfig":"20"},{"size":929,"mtime":1611888288014,"results":"28","hashOfConfig":"20"},{"size":753,"mtime":1612063105979,"results":"29","hashOfConfig":"20"},{"size":543,"mtime":1612120093234,"results":"30","hashOfConfig":"20"},{"size":3876,"mtime":1612073386679,"results":"31","hashOfConfig":"20"},{"size":725,"mtime":1612120037332,"results":"32","hashOfConfig":"20"},{"size":469,"mtime":1611799162899,"results":"33","hashOfConfig":"20"},{"size":1280,"mtime":1611799162890,"results":"34","hashOfConfig":"20"},{"size":2250,"mtime":1612127497226,"results":"35","hashOfConfig":"20"},{"size":2599,"mtime":1612127422429,"results":"36","hashOfConfig":"20"},{"size":347,"mtime":1611974781558,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1hhxasi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\index.js",[],["81","82"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\App.js",["83"],"\nimport Trans from './components/Transport/Transport'\nimport mouse from './mouse'\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Trans></Trans>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Transport\\Transport.jsx",["84","85","86","87","88"],"import React, { Component } from 'react'\nimport Instrument from '../Instrument/Instrument'\nimport InstrumentSelect from '../InstrumentSelect/InstrumentSelect'\nimport makeInstrumentLayers from '../../functions/instrument' \nimport play from '../../assets/icons/play-btn.svg'\nimport pause from '../../assets/icons/pause-btn.svg'\nimport * as Tone from 'tone'\nimport logo from '../../assets/logo-bold.png'\nimport options from '../../inst-options.js'\nimport Draggable from 'react-draggable';\nimport InstrumentPanel from '../InstrumentPanel/InstrumentPanel'\nimport './Transport.scss'\nimport save from '../../assets/icons/floppy-disk.svg'\nimport { Sampler } from 'tone'\nimport firebase from '../../firebase'\nimport {v4 as uuid} from 'uuid'\nimport DrumKit from '../DrumKit/DrumKit'\nconst db = firebase.firestore()\n\n/* Analogous to the Rig class in index.js. */\nexport const GlobalStep = React.createContext()\n\nexport default class Trans extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            ready: false,\n            playing: false,\n            length: null,\n            bpm: 90,\n            step: -1,\n            instruments: [],         \n            instOptions: options.inst,\n            kitOptions: options.kit\n        }\n    }\n\n    start = (t,bpm) => {\n        Tone.Transport.bpm.value = bpm\n        Tone.Transport.swing = 1\n        const clear = Tone.Transport.scheduleRepeat(function(time){\n            t.incrementStep()\n            t.state.instruments.forEach(i => {\n                i.ref.current.go()\n            })\n            \n        }, \"8n\");\n        this.setState({\n            ...this.state,\n            playing: true,\n            bpm: bpm,\n            clear: clear\n        })\n        Tone.start()\n        Tone.Transport.start()\n    }\n\n    stop = () => {\n        Tone.Transport.clear(this.state.clear).stop()\n        this.setState({\n            ...this.state,\n            playing: false\n        })\n    }\n\n    addInstrument = (inst) => {\n        const newInst = {\n            ref: React.createRef(),\n            layers: makeInstrumentLayers(inst.keys, this.state.length),\n            tone: inst.tone,\n            sounds: inst.sounds,\n            type: inst.type,\n            name: inst.tone.name,\n            role: 'inst',\n            id: uuid(),\n        }\n\n        this.setState({\n            ...this.state,\n            instruments: [\n                ...this.state.instruments,\n                newInst\n            ]\n        })\n    }\n\n    addDrumKit(kit){\n        const newKit = {\n            ref: React.createRef(),\n            layers: makeInstrumentLayers(kit.keys, this.state.length),\n            sounds: kit.sounds,\n            role: 'kit',\n            id: uuid()\n        }\n\n        this.setState({\n            ...this.state,\n            instruments: [\n                ...this.state.instruments,\n                newKit\n            ]\n        })\n    }\n\n    removeInstrument = (i) => {\n        console.log('i: ', i);\n        const newInstArray = [...this.state.instruments]\n        console.log('new inst arry ', [...newInstArray]);\n\n        newInstArray.splice(i,1)\n\n        this.setState({\n            ...this.state,\n            instruments: this.state.instruments.filter((inst,j)=>j !== i)\n        })\n    }\n\n    incrementStep = () => {\n        this.setState(\n            {\n                ...this.state,\n                step: this.state.step === this.state.length - 1 ? 0 : this.state.step + 1\n            })\n    }\n\n    changeValue = (e) => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n\n        if(e.target.name === 'bpm'){\n            this.stop()\n            this.start(this, e.target.value)\n        }\n    }\n\n    setLength = e => {\n        this.setState({\n            ...this.state,\n            ready: true,\n            length: e.target.value\n        })\n    }\n\n    saveBeat = () => {\n        \n        const instruments = this.state.instruments\n            .map(i => {\n                return ({\n                layers: i.ref.current.getLayers(),\n                tone: i.tone,\n                role: i.role,\n                sounds: i.sounds || 0,\n                type: i.type,\n            }\n          )\n        })\n\n        console.log(instruments);\n        \n        db.collection('beats').doc('LASTBEAT').set({           \n            bpm: this.state.bpm,\n            length: this.state.length,\n            instruments: instruments\n        })\n        .then(()=>console.log('doc written ok'))\n    }\n\n    getBeats = (t) => {\n        let beats = [];\n\n\n        db.collection(\"beats\")\n        .get()\n        .then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                let beat = doc.data()\n                \n                if(beat.instruments){\n                    beat.instruments.forEach(i => {\n                        i.ref = React.createRef()\n                        i.id = uuid()\n                    })\n                    beats.push(beat)\n                }\n            });\n\n            console.log(t);\n            t.setState({\n                ...t.state,\n                bpm: beats[1].bpm,\n                length: beats[1].length,\n                instruments: beats[1].instruments,\n            })\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n        \n    }\n\n    render() {\n        if(this.state.ready){\n            return (\n                // left panel\n                <div className=\"container\">\n                \n                <div className='controls'>\n                        <InstrumentSelect \n                            instruments = { this.state.instOptions } \n                            drumKits = {this.state.kitOptions}\n                            addInst = {(l)=>this.addInstrument(l)} \n                            addKit={(d)=>this.addDrumKit(d)}\n                        />\n                        <div className=\"controls__wrap\">\n                        <button className = 'setup__play-button' onClick = {() => {\n                        if(!this.state.playing) this.start(this, this.state.bpm)\n                        if(this.state.playing) this.stop()\n                        }} >\n                        <img src={this.state.playing ? pause : play} alt=\"\" className=\"setup__play-icon\"/>\n                        </button>\n                        <div className=\"controls__bpm-wrap\">\n                            BPM: {this.state.bpm}\n                            <input  \n                                className = 'transport__bpm'\n                                type=\"range\" \n                                name='bpm' min='60' \n                                max = '250'     \n                                onChange={e=>this.changeValue(e)} \n                                value={this.state.bpm}\n                            /> \n                        </div> \n                        </div>\n                    </div>\n\n                {/* Main panel */}\n                <div className='main'>\n                <img src={logo} className='logo' alt=\"\"/>\n                    <GlobalStep.Provider value = {{step: this.state.step}}>\n                     <div className=\"instruments\">\n                     \n                         {this.state.instruments.length < 1 && <h1 className='instruments__heading'>Add an instrument to get started</h1>}\n                         {[...this.state.instruments].map((i, j) => {\n                             if(i.role === 'inst') return <Instrument key={i.id} step={this.state.step} inst = {i} length ={this.state.length}  index = {j} layers = {i.layers} ref={i.ref} remove={this.removeInstrument}></Instrument>\n                             if(i.role === 'kit' ) return <DrumKit key={i.id} step={this.state.step} kit = {i.sounds} length ={this.state.length} index = {j} layers = {i.layers} ref={i.ref} remove={this.removeInstrument}></DrumKit>\n                         })}\n                     </div>\n                     </GlobalStep.Provider>\n\n\n                    \n                   \n                </div>\n                \n\n                </div>\n\n        )} else return (\n            <select onChange = {(e) => this.setLength(e)} name=\"length\" id=\"length\">\n                <option value=\"4\">4</option>\n                <option value=\"8\">8</option>\n                <option value=\"16\">16</option>\n                <option value=\"32\">32</option>\n            </select>\n        )\n    }\n}\n\n\n\n\n// db.collection(\"times\").get().then((querySnapshot) => {\n//     querySnapshot.forEach((doc) => {\n//         console.log(`${doc.id} => ${doc.data()}`);\n// });\n// });","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\inst-options.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\instrument.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Instrument\\Instrument.jsx",["89","90","91","92"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentSelect.jsx",["93","94","95","96","97"],"import React from 'react'\nimport makeInstrumentLayers from '../../functions/instrument'\nimport InstrumentItem from './InstrumentItem/InstrumentItem'\nimport './InstrumentSelect.scss'\nimport {useState} from 'react'\nimport {useRef} from 'react'\nimport notes from '../../functions/music'\nimport DrumKitItem from '../DrumKitItem/DrumKitItem'\nimport mouse from '../../mouse'\n\n\nexport default function InstrumentSelect(props) {\n    \n\n    return (\n        <div className='instrument-select'>\n            <h1>Instruments:</h1>\n            {props.instruments.map(i => <InstrumentItem inst={i} addInst = {props.addInst}/>)}\n            <h1>Drumkits:</h1>\n            {props.drumKits.map(k => <DrumKitItem kit={k} addKit = {props.addKit} />)}\n        </div>\n    )\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKit\\DrumKit.jsx",["98"],"import React, { Component } from 'react'\nimport Row from '../../components/Row/Row'\nimport remove from '../../assets/icons/x.svg'\nimport './DrumKit.scss'\nimport * as Tone from 'tone'\n\nexport default class DrumKit extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            sounds:{},\n            layers: []\n        }\n    }\n\n    changeLength(l){\n        const prevLength = this.state.length\n\n        this.setState({\n                ...this.state,\n                length: l\n            })\n        \n        let newLayers = {}\n        \n        for(const key in this.state.layers){\n            newLayers[key] = this.state.layers[key]\n\n            for(let i = 0; i < l - prevLength; i++){\n                newLayers[key].push(0)\n            }\n        }    \n    \n        this.setState({\n            ...this.state,\n            layers: newLayers\n        })\n    }\n\n    componentDidMount(){\n        this.setState({\n            ...this.state,\n            layers: this.props.layers,\n            sounds: this.props.kit\n        })\n    }\n\n    go(){\n        for(const layer in this.state.layers){\n            if(this.state.layers[layer][this.props.step]){\n                const time = Tone.now()\n                console.log(this.state.sounds[layer]);\n                this.state.sounds[layer].start(time)\n            } \n        }\n    }\n\n    renderRows(){\n        // pushing every array in this.layers into an array \n        let layers = []\n        for (const key in this.state.layers){  \n            layers.push([key, ...this.state.layers[key]])\n        }\n        // returning the array\n        return layers\n    }\n\n    placeBeat = (key, index) => {\n        let newLayer = [...this.state.layers[key]]\n        newLayer[index] === 0 ? newLayer[index] = 1 : newLayer[index] = 0\n        this.setState({\n            layers: {\n                ...this.state.layers,\n                [key]: newLayer\n            }\n        })\n    } \n\n    render() {\n        this.renderRows()\n        return (  \n            <>\n            \n            <div className = 'instrument'>   \n            <img src={remove} className = 'instrument__remove-btn' onClick={()=>this.props.remove(this.props.index)} />           \n                {\n                    // creating a Row component for each member of the array and passing it a layer\n                    this.renderRows()\n                    .reverse()\n                    .map(l => <Row placeBeat = {this.placeBeat} tone = {l[0]} layer = {l.filter(i => typeof i !== 'string')} />)\n                }     \n            </div>\n            </>\n        )\n    }\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\functions\\music.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\DrumKitItem\\DrumKitItem.jsx",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Row.jsx",["99","100"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentSelect\\InstrumentItem\\InstrumentItem.jsx",["101","102","103"],"import React, { Component } from 'react'\nimport { Player } from 'tone'\nimport notes from '../../../functions/music'\nimport expand from '../../../assets/icons/down-arrow.svg'\nimport collapse from '../../../assets/icons/up-arrow.svg'\nimport './InstrumentItem.scss'\nimport Collapsible from 'react-collapsible';\n\nexport default class InstrumentItem extends Component {\n    state = {\n        key: 'C',\n        scale: 'major',\n        octave: '3',\n        range: 1,\n        expanded: false\n    }\n\n\n\n    expand = () => {\n        this.setState({\n            ...this.state,\n            expanded: !this.state.expanded\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n\n        console.log(this.state[e.target.name]);\n    }\n\n    makeInst = (key, scale, octave, range, tone, type) => {\n        let _notes = []\n\n        for(let i = 0; i < range; i++){\n            _notes = [..._notes, ...notes.getScale(key, scale, Number(octave) + i)]\n            console.log(_notes);\n        }\n\n        this.props.addInst({keys:_notes, tone:tone, type})\n    }\n\n    render() {\n        // if (this.state.expanded){\n        return (\n            \n            <Collapsible\n                trigger = {this.props.inst.name}\n                triggerStyle = {{\n                    color: \"#ff4a4a\",\n                    fontSize: '20px',\n                    cursor: 'pointer'\n                }}\n                easing = 'ease-in-out'\n            >\n            <div className='inst'>\n            \n  \n\n            <div className='inst__wrapper'>\n                <label className='inst__form-label' htmlFor=\"key\">Key:</label>\n                <input className='inst__input' name='key' onChange = {(e) => this.handleChange(e)} type=\"text\" value={this.state.key}/>\n\n                <label className='inst__form-label' htmlFor=\"scale\">Scale:</label>\n                <select className='inst__select' onChange = {(e) => this.handleChange(e)} value={this.state.scale} name=\"scale\" id=\"cars\">\n                    <option value=\"chromatic\">chromatic</option>\n                    <option value=\"major\">major</option>\n                    <option value=\"minor\">minor</option>\n                </select>\n\n                <label className='inst__form-label' htmlFor=\"key\">octave</label>\n                <input className='inst__input' name='octave' onChange = {(e) => this.handleChange(e)} value={this.state.octave} type=\"number\"/>\n                <label className='inst__form-label' htmlFor=\"range\">range</label>\n                <input className='inst__input' name='range' onChange = {(e) => this.handleChange(e)} value={this.state.range} type=\"number\"/>\n\n                <span className=\"inst_btn-wrap\">\n                    <button className='inst__btn' onClick={\n                        ()=>this.makeInst(this.state.key, \n                            this.state.scale, this.state.octave, \n                            this.state.range, \n                            {\n                                urls: this.props.inst.urls,\n                                baseUrl: this.props.inst.baseUrl,\n                                name: this.props.inst.name\n                            },\n                            this.props.inst.type\n                    )}>\n                        ADD\n                    </button>\n                </span>\n            </div>\n            </div>\n            </Collapsible>\n        )\n        // } else {\n        //     return (\n        //         <>\n        //             <div className=\"inst__title-wrap\">\n        //             <h3 className=\"inst__name\" onClick={this.expand}>{this.props.inst.name}</h3> \n        //             <img className='inst__expand-icon' src={expand} onClick={this.expand} alt=\"\"/>\n        //             </div>\n        //         </>\n        //     )\n        // }\n    }\n}\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Row\\Beat.jsx",["104","105"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\firebase.js",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\InstrumentPanel\\InstrumentPanel.jsx",["106"],"import './InstrumentPanel.scss'\r\nimport React, { Component } from 'react'\r\nimport DrumKit from '../DrumKit/DrumKit'\r\nimport Instrument from '../Instrument/Instrument'\r\n\r\nexport default class InstrumentPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'instrument-panel'>\r\n                {this.props.instruments.map((i, j) => {\r\n                    if(i.role === 'inst') return (\r\n                        <Instrument \r\n                        step={this.props.step} \r\n                        inst = {i} \r\n                        length ={this.props.length}  \r\n                        index = {j} \r\n                        layers = {i.layers} \r\n                        ref={i.ref} \r\n                        remove={this.props.removeInstrument} />\r\n                    )\r\n                    if(i.role === 'kit') return (\r\n                        <DrumKit \r\n                        step={this.props.step} \r\n                        kit = {i.sounds} \r\n                        length = {this.props.length} \r\n                        index = {j} \r\n                        layers = {i.layers} \r\n                        ref={i.ref} \r\n                        remove={this.props.removeInstrument} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\Pedal.jsx",[],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\components\\Pedal\\settings.js",["107","108","109"],"C:\\Users\\chris\\OneDrive\\Desktop\\BrainStation\\New folder\\client\\bitBeat\\bitbeat\\src\\mouse.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":10,"column":8,"nodeType":"116","messageId":"117","endLine":10,"endColumn":17},{"ruleId":"114","severity":1,"message":"119","line":11,"column":8,"nodeType":"116","messageId":"117","endLine":11,"endColumn":23},{"ruleId":"114","severity":1,"message":"120","line":13,"column":8,"nodeType":"116","messageId":"117","endLine":13,"endColumn":12},{"ruleId":"114","severity":1,"message":"121","line":14,"column":10,"nodeType":"116","messageId":"117","endLine":14,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":244,"column":66,"nodeType":"124","messageId":"125","endLine":244,"endColumn":68},{"ruleId":"114","severity":1,"message":"126","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":28},{"ruleId":"114","severity":1,"message":"127","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":19,"column":25,"nodeType":"130","messageId":"131","endLine":19,"endColumn":40,"fix":"132"},{"ruleId":"133","severity":1,"message":"134","line":128,"column":21,"nodeType":"135","endLine":128,"endColumn":127},{"ruleId":"114","severity":1,"message":"126","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":28},{"ruleId":"114","severity":1,"message":"136","line":5,"column":9,"nodeType":"116","messageId":"117","endLine":5,"endColumn":17},{"ruleId":"114","severity":1,"message":"137","line":6,"column":9,"nodeType":"116","messageId":"117","endLine":6,"endColumn":15},{"ruleId":"114","severity":1,"message":"138","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":85,"column":13,"nodeType":"135","endLine":85,"endColumn":120},{"ruleId":"114","severity":1,"message":"139","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"140","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"141","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":16},{"ruleId":"114","severity":1,"message":"142","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":14},{"ruleId":"114","severity":1,"message":"143","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"144","line":12,"column":11,"nodeType":"116","messageId":"117","endLine":12,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":13,"column":9,"nodeType":"116","messageId":"147","endLine":13,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":10,"column":52,"nodeType":"124","messageId":"125","endLine":10,"endColumn":54},{"ruleId":"148","severity":1,"message":"149","line":123,"column":18,"nodeType":"150","messageId":"151","endLine":123,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":124,"column":18,"nodeType":"150","messageId":"151","endLine":124,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":125,"column":18,"nodeType":"150","messageId":"151","endLine":125,"endColumn":20},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'mouse' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'InstrumentPanel' is defined but never used.","'save' is defined but never used.","'Sampler' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'makeInstrumentLayers' is defined but never used.","'Time' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"154","text":"155"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useRef' is defined but never used.","'notes' is defined but never used.","'Component' is defined but never used.","'FadeIn' is defined but never used.","'Player' is defined but never used.","'expand' is defined but never used.","'collapse' is defined but never used.","'toggle' is assigned a value but never used.","no-const-assign","'active' is constant.","const","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[623,623],"()"]